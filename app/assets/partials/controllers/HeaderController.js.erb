// Define the `HeaderController` controller on the `MarketApp` module
marketApp.controller('HeaderController', [
  '$q', 
  '$scope',
  '$uibModal', 
  'Auth', 
  '$http', 
  '$route', 
  '$window',
  '$log',
  'GetAllNewsletter',
  'GetUserAddresses',
  'GetUserCommerces',
  'GetCommerceProducts', 
  'SupCommerceProducts', 
  'GetAllProduct', 
  'SearchProduct', 
  'GetAllCommerce',
  'SearchCommerce',
  '$timeout', 
  'myCoordinates', 
  'myConnexion',
  'myBoutiques',
  'myUseraddress',
  function HeaderController($q, $scope, $uibModal, Auth, $http, $route, $window, $log, GetAllNewsletter, GetUserAddresses, GetUserCommerces, GetCommerceProducts, SupCommerceProducts, GetAllProduct, SearchProduct, GetAllCommerce, SearchCommerce, $timeout, myCoordinates, myConnexion, myBoutiques, myUseraddress) {

    var deferred = $q.defer();
    //$window.location.reload();
    $scope.nb_order = 99;
    $scope.activemenu = false;
    $scope.SeeSearch = false;
    $scope.MapOpen = false;
    $scope.OngletCommerce = false
    $scope.ProfileOpen = false;
    $scope.credentials = { email: ''};

    $scope.records = [];
    $scope.coordonnees = [];
    $scope.latitude = '';
    $scope.longitude = '';

    $scope.labels = ['Janvier', 'Février', 'mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aout', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];
    $scope.series = ['Nombre de commandes', 'nombre de clients'];

    $scope.data = [
      [65, 59, 80, 81, 56, 55, 40, 47, 75, 69, 92, 70],
      [15, 19, 20, 21, 36, 35, 10, 17, 25, 29, 32, 54]
    ];

    $scope.datasetOverride = [
      {
        label: "Bar chart",
        borderWidth: 1,
        type: 'bar'
      },
      {
        label: "Line chart",
        borderWidth: 3,
        hoverBackgroundColor: "rgba(255,99,132,0.4)",
        hoverBorderColor: "rgba(255,99,132,1)",
        type: 'line'
      }
    ];

    myConnexion.getConnexion().then(function (user) {
      //console.log("HeaderController --> myConnexion : ", user)
      $scope.username = user.name;
      $scope.isAuthenticated = true;
      $scope.IsVisible = false;
      var userid = user.id;
      myUseraddress.Getuseraddress(userid).then(function (response) {
          angular.forEach(response, function(address, key) {
              if (address.length > 0) {
                  console.log("HeaderController --> address : ", address) 
              } else {
                myCoordinates.getCoordinates().then(function (position) {
                  var address = {
                      address1: '',
                      address2: 'non fournie',
                      country: '',
                      city: '',
                      zipcode: '',
                      state: '',
                      latitude: position.lat,
                      longitude: position.lng,
                      userId: userid
                  }

                  $log.log('Submiting address info.'); // kinda console logs this statement
                  $log.log(address);
                  new GetUserAddresses(
                      address 
                  ).create();
                })
              }
          })
      })

      if (user.isSeller == true){
          $scope.isSeller = true;
          // Récupération de la liste des commerces du user
          GetUserCommerces.get({userId: user.id}).then(function(commerces){
            $scope.commerces = commerces
            $scope.nb_commerce = commerces.length

            var calc_nbproduct = 0

            $scope.ShowProduct = function (commerce) {
              $scope.IsVisible = $scope.IsVisible ? false : true;
              GetCommerceProducts.get({commerceId: commerce.id}).then(function(products){
                $scope.products = products
                calc_nbproduct = calc_nbproduct + products.length
                $scope.nb_produit = calc_nbproduct
                //console.log("produits : ", $scope.nb_produit)
                //console.log("nbre produits : ", $scope.nb_produit)
              }, function(error) {
                  // Log on console to check out what the error is.
                  console.info('Error recuperation liste produits! : ', error);
              })
            }

            $scope.ShowHide = function () {
              $scope.IsVisible = $scope.IsVisible ? false : true;
            }

            angular.forEach(commerces, function (commerce) {
              GetCommerceProducts.get({commerceId: commerce.id}).then(function(products){
                $scope.products = products
                calc_nbproduct = calc_nbproduct + products.length
                $scope.nb_produit = calc_nbproduct
                //console.log("produits : ", $scope.nb_produit)
                //console.log("nbre produits : ", $scope.nb_produit)
              }, function(error) {
                  // Log on console to check out what the error is.
                  console.info('Error recuperation liste produits! : ', error);
              })
            });

          }, function(error) {
              // Log on console to check out what the error is.
              console.info('Error recuperation liste commerces! : ', error);
          });

          $scope.delCommerce = function (data) {
            $log.log('Deleting commerce info.'); // kinda console logs this statement
            $log.log(data);
            new GetAllCommerce(
                data 
            ).remove();
            //$route.reload();
            $window.location.reload();
          }

          $scope.delProduct = function (index) {
            var delProduct = $scope.products
            var data = delProduct[index]
            //console.log("produit : ", data)
            $scope.products.splice(index, 1);
            $log.log('Remove product info.'); // kinda console logs this statement
            $log.log(data);
            new SupCommerceProducts(
                data
            ).remove();
          }
      } 

      if (user.isBuyer == true){
          $scope.isBuyer = true;

          // Récupération des commandes de l'utilisateur
          //GetUserOrders.get({userId: userid}).then(function (orders) {
          //    console.log("HeaderController--> orders :  :", orders)
          //    $scope.nb_order = orders.length
          //    //$scope.orders = orders
          //}, function (error) {
          //    // do something about the error
          //    console.log("Error Log",error.statusText);
          //    deferred.reject(error);
          //});
          // recuperation des coordonnees de l'utilisateur
          myCoordinates.getCoordinates().then(function (position) {
            $scope.latitude = position.lat
            $scope.longitude = position.lng
            //console.log("HeaderController --> lat : ", $scope.latitude);
            //console.log("HeaderController --> lng : ", $scope.longitude);
            $scope.coordonnees.push($scope.latitude, $scope.longitude)

          //myCoordinates.getCoordinates().then(function (position) {
            GetAllProduct.query().then(function (results) { 
              $scope.nb_produit_all = results.length
              // Pour chaque produits on vérifie si celui-ci est proche de notre position
              angular.forEach(results, function (item) {
                SearchProduct.query({name_query:item.name, lat_query:$scope.latitude, lng_query:$scope.longitude}).then(function (retour) {
                  var name = item.name;
                  var stock = item.unitsinstock;
                  var location_near = '';
                  if  (retour.length > 0){
                      location_near = true;
                  } else {
                      location_near = false;
                  }
                  $scope.records.push({name:name, unitsinstock:stock, result:location_near});
                  //deferred.resolve($scope.records);
                }, function (error) {
                    // do something about the error
                    console.log("Error Log",error.statusText);
                    deferred.reject(error);
                });
              });
              //console.log("HeaderController --> GetAllProduct : ", $scope.records);
              //deferred.resolve($scope.records);
            }, function (error) {
                // do something about the error
                console.log("Error Log",error.statusText);
                deferred.reject(error);
            });

            GetAllCommerce.query().then(function (commerces) {
              $scope.commerces = commerces
              $scope.nb_commerce = commerces.length
            })

            $scope.productSelected = function (item) {
              //Récupération de l'adresse IP
                SearchCommerce.query({name_query:item.name, lat_query:$scope.latitude, lng_query:$scope.longitude}).then(function (results) {
                    //console.log("donnée renseignée", results);
                    $scope.commercenear = results;
                    //console.log($scope.commercenear);
                    $uibModal.open({
                        templateUrl: "<%= asset_path('Templates/myModalCommercelist.html') %>", // loads the template
                        controller: 'modalCommercelist',
                        size: 'large',
                        resolve: {
                          commercenear: function() {
                            return { 
                              listcommerce: $scope.commercenear
                            };
                          }
                        }
                    });
                    deferred.resolve($scope.commercenear);
                }, function (error) {
                    // do something about the error
                    console.log("Error Log",error.statusText);
                    deferred.reject(error);
                });
            };

            
          });

      }

    }, function (error) {
        // do something about the error
        console.log("Error Log",error.statusText);
    });

    //console.log("coordonnees : ", $scope.coordonnees)

    // Ouverture de la fenetre de souscription/authentification
    $scope.OpenRegistration = function () {
        //$scope.activemenu = true;
        $uibModal.open({
            templateUrl: "<%= asset_path('Templates/myModalRegistration.html') %>", // loads the template
            ariaLabelledBy: 'modal-title-top',
            ariaDescribedBy: 'modal-body-top',
            controller: 'modalRegistration',
            backdrop: true,
            windowClass: 'modal',
            size: 'md',
            resolve: {
                coordinates: function () {
                  return $scope.coordonnees; 
                },
                boutiques: function (myBoutiques) {
                  return myBoutiques;
                }
            }
        });
    };

    $scope.searchParams = {
        "query":""
    };
    
    $scope.foo = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.";
    
    $scope.selectedIndex = 0;
    
    $scope.itemClicked = function ($index) {
    //  console.log($index);
      $scope.selectedIndex = $index;
    };

    $scope.availableSearchParams = [
//      { key: "céréales", name: "Céreales", placeholder: "Céreales..." },
//      { key: "tubercules", name: "Tubercules", placeholder: "Tubercules...", suggestedValues: ['Macabo', 'Igname', 'Pomme de terre', 'Manioc'] },
      { key: "fruits", name: "Fruits", placeholder: "Fruits...", restrictToSuggestedValues: false, suggestedValues: ['Mangue', 'Banane', 'Cerise', 'Clémentine', 'Poire'] },
      { key: "légumes", name: "Légumes", placeholder: "Légumes..", restrictToSuggestedValues: true, suggestedValues: ['Oignons', 'Haricots', 'Gombo', 'Choux', 'Echalotte'] },
//      { key: "épices", name: "Epices", placeholder: "Epices..." }
    ];

    // Récupération de l'ensemble des produits présents en base
    // if  (Auth.isAuthenticated() )
    // {
    //   // Check on load if user signed in
    //   Auth.currentUser().then(function(user) {
    //     $scope.isAuthenticated = true;
    //     $scope.username = user.name;
    //     if (user.seller_role == true){
    //         $scope.isSeller = true;
    //     }
    //     if (user.buyer_role == true){
    //         $scope.isBuyer = true;
    //     }
    //   }, function(error) {
    //     // Log on console to check out what the error is.
    //      console.info('Error isAuthenticated user!');
    //   });
    // }

    $scope.$on('devise:login', function(event, currentUser) {
      // Deconnexion automatique
      $timeout(function() {
        Auth.logout();
        $route.reload();
        console.info('It`s OK, website logged out in mind of secureness!');
      }, 1800000);
    });
    
    $scope.$on('devise:new-session', function(event, currentUser) {
      //console.log("nouvelle session")
      $scope.isAuthenticated = true;
      if (currentUser.seller_role == true){
          $scope.isSeller = true;
      }
      if (currentUser.buyer_role == true){
          $scope.isBuyer = true;
      }
    });
    
    $scope.$on('devise:logout', function(event, oldCurrentUser) {
      $scope.isAuthenticated = false;
      if (oldCurrentUser.seller_role == true){
          $scope.isSeller = false;
      }
      if (oldCurrentUser.buyer_role == true){
          $scope.isBuyer = false;
      }
      $scope.IsVisible = false;
      $scope.activemenu = false;
      $scope.SeeSearch = false;
      $scope.MapOpen = false;
      $scope.OngletCommerce = false
      $scope.ProfileOpen = false;
    });
    
    // $scope.$on('devise:new-registration', function(event, user) {
    //   $scope.isAuthenticated = true;
    //   if (user.seller_role == true){
    //       $scope.isSeller = true;
    //   }
    //   if (user.buyer_role == true){
    //       $scope.isBuyer = true;
    //   }
    // });
    
    $scope.logout = function() {
      $scope.activemenu = false;
      Auth.logout().then(function(oldUser) {
        alert(oldUser.name + " You're successfully logged out!");
        $route.reload();
      }, function(error) {
        // An error occurred logging out.
      });
    };

    $scope.newsletter = function () {
      $log.log('Newsletter email info.'); // kinda console logs this statement
      $log.log($scope.credentials);
      new GetAllNewsletter(
          $scope.credentials  
      ).create();
      $route.reload();
      $scope.credentials = { email: ''};
    };

}]);