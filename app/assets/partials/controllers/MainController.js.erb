(function() {
    'use strict';
    var module = angular.module('marketApp');


module.controller('MainController', [
    '$q', 
    '$scope',
    '$compile',
    '$window',
    '$uibModal',
    '$log',
    '$http',
    'nemSimpleLogger',
    'leafletData',
    'coordinates', 
    '$geolocation',
    'myPosition',
    'myCoordinates', 
    'markers', 
    'boutiques',
    'myBoutiques',
    'myCommercenear',
    'SearchCommerce',
    'GetAllCommerce',
    '$route',
    '$routeParams',
    'Auth',
    'ngCart',
    'GetUserCommerces',
    'GetUserAddresses',
    'GetAllUser',
    function($q, $scope, $compile, $window,  $uibModal, $log, $http, nemSimpleLogger, leafletData, coordinates, $geolocation, myPosition, myCoordinates, markers, boutiques, myBoutiques, myCommercenear, SearchCommerce, GetAllCommerce, $route, $routeParams, Auth, ngCart, GetUserCommerces, GetUserAddresses, GetAllUser, UpdateOrderDetails) {

        ngCart.setTaxRate(7.5);
        ngCart.setShipping(2.99);
        var deferred = $q.defer();
    
        //map = L.mapquest.map('map', {
        //    center: [47.4550213, -0.5370654],
        //    layers: [tileLayer],
        //    zoom: 12
        //});
        var watchposOptions = {
            timeout: 6000,
            maximumAge: 250, //Accept a cached position whose age is no greater than the specified time in milliseconds
            enableHighAccuracy: true
        };

        myPosition.getPosition({watchposOptions})
        //console.log("myPosition : ", myPosition)

        $scope.$on("geolocationStateChanged", function(evt, data) {
            if (data) {
                console.log("latitude  : ", data.latitude)
                console.log("longitude : ", data.longitude)
            } else {
                console.log("KO : ", data)
            }
        })
        
        //var myPosition = {}
        //var myPosition = $geolocation.position.coords

        //console.log("type of data: "+typeof(myPosition));
        //console.log("myPosition : ", myPosition)
        //for(var key in myPosition) {
        //   if(myPosition.hasOwnProperty(key)) {
        //        console.log(key, myPosition[key])
        //        //do something with value;
        //    }
        //}
        //console.log("coords : ", myPosition.coords)
        //$scope.$watch('myPosition.coords', function (newValue, oldValue) {
        //    console.log("new position value : ", newValue)
        //    console.log("old position value : ", oldValue)
            //$scope.map = {
            //  center: {
            //    latitude: newValue.latitude,
            //    longitude: newValue.longitude
            //  },
            //  zoom: 16
            //};                      
        //}, true);

        coordinates.getCoordinates().then(function (resultcoord) {
            var map = null;
            var mapquest_key = 'qH6FPb3ABRz7fD8LSYwfTGGhw4QASLSn';
    
            //nemSimpleLogger.doLog = true; //default is true 
            //nemSimpleLogger.currentLevel = nemSimpleLogger.LEVELS.debug;//defaults to error only 
    
            L.mapquest.key = mapquest_key; //Cle API mapquest
            L.mapquest.open = true; // Permet d'utiliser les fonctionnalités de openstreet
            // The ID of a map style. The supported style IDs are 'map', 'hybrid', 'satellite', 'light', 'dark'.
            var tileLayer = L.mapquest.tileLayer('map');
            map = L.mapquest.map('map', {
                center: [resultcoord.lat, resultcoord.lng],
                layers: [tileLayer],
                zoom: 12
            });

            // Controle de la map (localisation, zoom etc...)
            map.addControl(L.mapquest.control());
            
            // Affichage des commerces à proximité si l'utilisateur s'est authentifié
            if (Auth.isAuthenticated() )
            {
                Auth.currentUser().then(function(user) {
                    //--------------------------------------------------*
                    //          S E L L E R   B L O C                   *
                    //--------------------------------------------------*
                    // Si l'utilisateur a un role de vendeur on vérifie si :
                    // C'est un vendeur du type 
                    //    - sedentaire : Vérification de la présence des commerces
                    //    - itinérant  : 
                    if (user.seller_role == true){
                        //console.log("seller : ", user)
                        //vérification de la présence de commerces en base pour l'utilisateur connecté
                        GetUserCommerces.get({userId: user.id}).then(function(result){
                            // Si le vendeur sedentaire ne possède pas de commerce
                            var nb_commerce = result.length
                            if (nb_commerce == 0){
                                if (user.statut_type == "sedentary"){
                                    //Transmission des coordonnées géo de l'utilisateur pour affichage liste de commerces à proximité
                                    //La liste des commerces à proximité est issue d'une extraction des données Mapquest
                                    //boutiques.getBoutiques([resultcoord.lat, resultcoord.lng]).then(function (boutique) {
                                    $uibModal.open({
                                        templateUrl: "<%= asset_path('Templates/myModalBoutiqueSedentaire.html') %>", // loads the template
                                        controller: 'modalBoutiqueSedentaire',
                                        backdrop: true,
                                        size: 'md',
                                        windowClass: 'modal',
                                        resolve: {
                                            usercoord: function () {
                                                return resultcoord; 
                                            },
                                            user: function () {
                                                return user; 
                                            }
                                        }
                                    })
                                    //})
                                }
                                else {

                                    $uibModal.open({
                                        templateUrl: "<%= asset_path('Templates/myModalBoutiqueItinerant.html') %>", // loads the template
                                        controller: 'modalBoutiqueItinerant',
                                        backdrop: true,
                                        size: 'md',
                                        windowClass: 'modal',
                                        resolve: {
                                            usercoord: function () {
                                                return resultcoord; 
                                            },
                                            user: function () {
                                                return user; 
                                            }
                                        }
                                    })

                                }
                            } else {
                                // L'objectif est de donnée la possibilité au vendeur de communiquer avec les prospects à proximité de son point de vente
                                // Pour cela, il faut :
                                //  - Récupérer la liste des clients stockées et l'Afficher au niveau de la map
                                //  - Mettre en place un bouton contact client (messagerie) [Inactif]
                                GetAllUser.query().then(function (userdata) {
                                    angular.forEach(userdata, function(user, key) {
                                        // Si le client est un acheteur on récupère ses coordonnées
                                        //console.log("user info : ", user)
                                        var userid = user.id
                                        if (user.buyerRole == true) {
                                            // récuperation des adresses des clients et affichage sur la map
                                            GetUserAddresses.get({userId: userid}).then(function (addresses) {
                                                angular.forEach(addresses, function (address) {
                                                    var latitude = address.latitude;
                                                    var longitude = address.longitude;
                                                    //console.log("adresse buyer : ", address)

                                                    //Customisation des Icons utiliser pour la map
                                                    //customIcon = L.mapquest.icons.marker({
                                                    //    primaryColor: '#22407F',
                                                    //    secondaryColor: '#3B5998',
                                                    //    shadow: true,
                                                    //    size: 'md'
                                                    //    symbol: 'A'
                                                    //});

                                                    // Customisation de l'Icon pour les commerces déjà presents en base
                                                    customIcon = L.icon({
                                                        iconUrl: "<%= image_url('buyer.png') %>",
                                                        iconSize: [25, 25], // size of the icon
                                                        });
                                                    commentaire = "<div>Send message to the customer <br /><button class='btn' ng-click='btncustomer"+ address.id +"()'>Cliquez ici</button></div>";

                                                    // Compile title DOM into a link function
                                                    var linkFn = $compile(angular.element(commentaire));
                                                    
                                                    // Return a jQuery DOM tree fully controlled by AngularJS so that ng directives will work
                                                    var popup = linkFn($scope);
                                                    var customPopup = L.popup()
                                                        .setLatLng([latitude, longitude])
                                                        .setContent(popup[0])
                                                        .openOn(map);

                                                    L.marker([latitude, longitude], {icon: customIcon}).bindPopup(customPopup).addTo(map);
                                                })

                                            }, function (error) {
                                                // do something about the error
                                                console.log("Error GetAllAddress : ",error.statusText);
                                                deferred.reject(error);
                                            });
                                        }
                                    })
                                }, function (error) {
                                    // do something about the error
                                    console.log("Error GetAllUser : ",error.statusText);
                                    deferred.reject(error);
                                });

                                // boucle sur l'ensemble des commerces de l'utilisateur et affichage sur la map
                                for(var i=0; i<nb_commerce; i++) {
                                    //console.log("commerces : ", result[i])

                                    var boutique_place = "";
                                    var customIcon = "";
                                    var commentaire = "";

                                    boutique_place = [result[i].latitude, result[i].longitude];
                                    //boutique_place.push(result[i].latitude, result[i].longitude);
                                    var btnproduct = 'btnproduct'+result[i].id;
                                    var commerce_id = result[i].id;

                                    $scope[btnproduct] = function () {
                                        $uibModal.open({
                                            templateUrl: "<%= asset_path('Templates/myModalProduct.html') %>", // loads the template
                                            controller: "modalProduct",
                                            backdrop: "static", // setting backdrop allows us to close the modal window on clicking outside the modal window
                                            size: 'lg',
                                            windowClass: "hmodal-info",
                                            resolve: {
                                                commerce: function () {
                                                    return commerce_id; // Appel au controlleur modalProduct avec en entrée le nom du commerce
                                                },
                                                user: function () {
                                                    return user; 
                                                }
                                            }
                                        });
                                    };
                                    
                                    // Customisation des Icons utiliser pour la map
                                    customIcon = L.mapquest.icons.marker({
                                        primaryColor: '#22407F',
                                        secondaryColor: '#3B5998',
                                        shadow: true,
                                        size: 'md'
                            //          symbol: 'A'
                                    });

                                    // Customisation de l'Icon pour les commerces déjà presents en base
                                    customIcon = L.icon({
                                        iconUrl: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2VarF6jyBEEqUI5d0ZK1NMm69I1rngTAM1KEQHvH_5CW73v-g',
                                        iconSize: [35, 35], // size of the icon
                                        });
                                    commentaire = "<div><b>D&eacuteja adh&eacuterent</b>.<br /> Pour ajouter vos produits <br /><button class='btn' ng-click='btnproduct"+ result[i].id +"()'>Cliquez ici</button></div>";

                                    // Compile title DOM into a link function
                                    var linkFn = $compile(angular.element(commentaire));
                                    
                                    // Return a jQuery DOM tree fully controlled by AngularJS so that ng directives will work
                                    var popup = linkFn($scope);

                                    //console.log("coordonnées :", boutique_place )
                                    if (boutique_place !== " ") {
                                    //if (boutique_place.length > 0) {
                                        var customPopup = L.popup()
                                            .setLatLng(boutique_place)
                                            .setContent(popup[0])
                                            .openOn(map);
                                        //map.removeLayer(result);
                                        L.marker(boutique_place, {icon: customIcon}).bindPopup(customPopup).addTo(map);
                                    }
                                }
                            }

                            deferred.resolve($scope.commerces);
                        }, function (error) {
                            // do something about the error
                            console.log("Error Log",error.statusText);
                            deferred.reject(error);
                        });
                        var p = deferred.promise;

                    } else {
                    //--------------------------------------------------*
                    //            B U Y E R   B L O C                   *
                    //--------------------------------------------------*
                        // L'utilisateur a un rôle d'acheteur
                        // Vérification en base de la présence de commerce en fonction des coordonnées géo
                        myCommercenear.Getcommercenear(resultcoord.lat, resultcoord.lng).then(function (commerces) {
                            //var result = angular.equals({}, commerces);
                            var nb_commerce = Object.keys(commerces).length;
                            //let result = commerces.hasOwnProperty('name')
                            // Si on ne trouve aucun commerce en base, extraction des données Mapquest
                            //console.log("MainController --> commerces ", commerces)
                            //console.log("MainController --> nb_commerce ", nb_commerce)
                            if (nb_commerce == 0) {
                                var list_commerce = 15
                                console.log("pas de boutiques enregistrées à proximité de chez vous")
                                $window.alert("Pas de boutiques enregistrées à proximité de chez vous");
                                myBoutiques.getBoutiques([resultcoord.lat, resultcoord.lng], list_commerce).then(function (boutique) {
                                    var boutiques = boutique.searchResults
                                    angular.forEach(boutiques, function (boutique) {
                                        //console.log("getBoutiques --> boutique : ", boutique)
                                        var coord = boutique.shapePoints
                                        //console.log("getBoutiques --> coord : ", coord)
                                        var boutique_id = boutique.resultNumber
                                        var latitude = coord[0];
                                        var longitude = coord[1];
                                        
                                        //console.log("adresse buyer : ", address)
                                        //Customisation des Icons utiliser pour la map
                                        //customIcon = L.mapquest.icons.marker({
                                        //    primaryColor: '#22407F',
                                        //    secondaryColor: '#3B5998',
                                        //    shadow: true,
                                        //    size: 'md'
                                        //    symbol: 'A'
                                        //});

                                        // Customisation de l'Icon pour les commerces déjà presents en base
                                        var customIcon = L.icon({
                                            iconUrl: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2VarF6jyBEEqUI5d0ZK1NMm69I1rngTAM1KEQHvH_5CW73v-g',
                                            iconSize: [35, 35], // size of the icon
                                            });
                                        var commentaire = "<div>Send message to the seller <br /><button class='btn btn-info' ng-click='btnseller"+ boutique_id +"()'>Click here</button></div>";

                                        // Compile title DOM into a link function
                                        var linkFn = $compile(angular.element(commentaire));
                                        
                                        // Return a jQuery DOM tree fully controlled by AngularJS so that ng directives will work
                                        var popup = linkFn($scope);
                                        var customPopup = L.popup()
                                            .setLatLng([latitude, longitude])
                                            .setContent(popup[0])
                                            .openOn(map);

                                        L.marker([latitude, longitude], {icon: customIcon}).bindPopup(customPopup).addTo(map);
                                    })

                                }, function (error) {
                                    // do something about the error
                                    console.log("Error getBoutiques : ", error);
                                    deferred.reject(error);
                                });

                            } else {
                        //Affichage de la liste des commerces récupérée sur la MAP
                        //GetAllCommerce.query().then(function (boutiques) {
                            //console.log("boutiques : ", boutiques)
                                angular.forEach(commerces, function(boutique, key) {
                                    //console.log("boutique trouvée : ", boutique)
                                    // boucle sur l'ensemble des commerces de l'utilisateur et affichage sur la map
                                    for(var i=0; i<nb_commerce; i++) {
                                        //boutique_place = [boutique[i].latitude, boutique[i].longitude]
                                        //console.log("boutique_place test : ", boutique_place)

                                        var commentaire = "";
                                        var boutique_place = " ";
                                        var customIcon = "";
                                        var boutique_id = boutique[i].id
                                        var btnorder = 'btnorder'+boutique_id;

                                        $scope[btnorder] = function () {
                                            $uibModal.open({
                                                templateUrl: "<%= asset_path('Templates/myModalOrder.html') %>", // loads the template
                                                controller: "modalOrder",
                                                backdrop: true, // setting backdrop allows us to close the modal window on clicking outside the modal window
                                                size: 'lg',
                                                resolve: {
                                                    boutique: function () {
                                                        return boutique_id; // Appel au controlleur modalOrder avec en entrée le nom du commerce
                                                    },
                                                    user: function () {
                                                        return user; 
                                                    }
                                                }
                                            });

                                        };

                                        // Si le user est un acheteur
                                        boutique_place = [boutique[i].latitude, boutique[i].longitude];

                                        // Customisation de l'Icon pour les commerces déjà presents en base
                                        customIcon = L.icon({
                                            iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/7/74/Fruit_Stand_-_The_Noun_Project.svg',
                                            iconSize: [35, 35], // size of the icon
                                        });

                                        commentaire = "<div>Commerce adh&eacuterent.<br /> Pour Commandez vos produits <br /><button class='btn' ng-click='btnorder"+ boutique_id +"()'>Cliquez ici</button></div>";
                                        // Compile title DOM into a link function
                                        var linkFn = $compile(angular.element(commentaire));
                                                
                                        // Return a jQuery DOM tree fully controlled by AngularJS so that ng directives will work
                                        var popup = linkFn($scope);

                                        console.log("coordonnées :", boutique_place )
                                        if (boutique_place !== " ") {
                                            var customPopup = L.popup()
                                                .setLatLng(boutique_place)
                                                .setContent(popup[0])
                                                .openOn(map);
                                            //map.removeLayer(result);
                                            L.marker(boutique_place, {icon: customIcon}).bindPopup(customPopup).addTo(map);
                                        }
                                    }
                                });
                        //});
                            }
                        })


                    }
                }, function(error) {
                    // unauthenticated error
                });
            }
        });

    }]);

})();